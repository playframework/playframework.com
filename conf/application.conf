play {
  modules {
    enabled += services.github.GitHubModule
    enabled += services.releases.ReleasesModule
    enabled += models.ExamplesModule
    enabled += actors.ActorsModule
  }

  http {
    requestHandler = play.api.http.DefaultHttpRequestHandler
    secret.key = a-long-secret-to-calm-the-rage-of-the-entropy-gods
  }

  i18n.langs = [en, ja, tr, fr, bg]

  server.netty.option.child.SO_KEEPALIVE = true

  filters {
    headers {
      frameOptions = "sameorigin"
    }
    hosts {
      allowed = [".playframework.com", "localhost", "playframework-com-app"] # playframework-com-app is the upstream host configured in nginx
    }
  }
}

github.committerTeams = ["Owners", "Integrators"]
github.organisation = "playframework"
github.apiUrl = "https://api.github.com"

examples.apiUrl = "https://example.lightbend.com/v1/api/templates"
examples.playVersions = [ "2.7.x" ]
examples.cache.ttl = 1 hour

documentation.home=testdocs

# The loader dispatcher is used by the actor that loads files out of git.
# All blocking git IO is done on these threads.
loader-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    core-pool-size-min = 4
    core-pool-size-max = 4
  }
}

# The polling dispatcher is responsible for two things, one is polling GitHub for documentation changes, the other
polling-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    core-pool-size-min = 1
    core-pool-size-max = 1
  }
}

sitemapgenerator-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    core-pool-size-min = 1
    core-pool-size-max = 1
  }
}

documentation {
  path = "."
  main {
    lang = "en"
    repo = "generated"
    versionFile = ".version"
    versionPattern = "(.+)"
    gitHubSource = "https://github.com/playframework/playframework/edit/%s/documentation/%s"
  }
  translations = [
    {
      lang = "ja"
      repo = "ja"
      gitHubSource = "https://github.com/playframework-ja/translation-project/blob/%s/%s"
    },
    {
      lang = "tr"
      repo = "tr"
      versionFile = "project/plugins.sbt"
      versionPattern = "\"play-docs-sbt-plugin\" % \"([^\"]+)"
      gitHubSource = "https://github.com/PlayFrameworkTR/translation-project/blob/%s/%s"
    },
    {
      lang = "fr"
      repo = "fr"
      versionFile = "project/plugins.sbt"
      versionPattern = "\"play-docs-sbt-plugin\" % \"([^\"]+)"
      gitHubSource = "https://github.com/cheleb/playframework-fr/blob/%s/%s"
    },
    {
      lang = "bg"
      repo = "bg"
      versionFile = "project/plugins.sbt"
      versionPattern = "\"play-docs-sbt-plugin\" % \"([^\"]+)"
      gitHubSource = "https://github.com/antonsarov/translation-project/blob/%s/%s"
    }
  ]
  redirects = [
    { from = "AkkaCore",                    to = "ThreadPools"                                                       },
    { from = "AssetsGoogleClosureCompiler", to = "RequireJS-support"                                                 },
    { from = "CSPFilter",                   to = "CspFilter"                                                         },
    { from = "CertificateGeneration",       to = "https://lightbend.github.io/ssl-config/CertificateGeneration.html" },
    { from = "CertificateRevocation",       to = "https://lightbend.github.io/ssl-config/CertificateRevocation.html" },
    { from = "CipherSuites",                to = "https://lightbend.github.io/ssl-config/CipherSuites.html"          },
    { from = "ExampleSSLConfig",            to = "https://lightbend.github.io/ssl-config/ExampleSSLConfig.html"      },
    { from = "HostnameVerification",        to = "https://lightbend.github.io/ssl-config/HostnameVerification.html"  },
    { from = "HttpApi",                     to = "ScalaActions"                                                      },
    { from = "Installing",                  to = "Requirements"                                                      },
    { from = "JavaGlobal",                  to = "GlobalSettings"                                                    },
    { from = "JavaInterceptors",            to = "JavaActionCreator"                                                 },
    { from = "JavaJson",                    to = "JavaJsonActions"                                                   },
    { from = "JavaJson",                    to = "JavaJsonActions"                                                   },
    { from = "JavaJsonRequests",            to = "JavaJsonActions"                                                   },
    { from = "JavaRoutingDSL",              to = "JavaRoutingDsl"                                                    },
    { from = "JavaTodoList",                to = "HelloWorldTutorial"                                                },
    { from = "KeyStores",                   to = "https://lightbend.github.io/ssl-config/KeyStores.html"             },
    { from = "LooseSSL",                    to = "https://lightbend.github.io/ssl-config/LooseSSL.html"              },
    { from = "ProductionDist",              to = "Production"                                                        },
    { from = "Protocols",                   to = "https://lightbend.github.io/ssl-config/Protocols.html"             },
    { from = "PullRequests",                to = "https://www.playframework.com/contributing"                        },
    { from = "Samples",                     to = "https://developer.lightbend.com/start/?group=play"                 },
    { from = "ScalaAnorm",                  to = "https://playframework.github.io/anorm/"                            },
    { from = "ScalaEmbeddingPlay",          to = "ScalaEmbeddingPlayAkkaHttp"                                        },
    { from = "ScalaFormHelpers",            to = "ScalaForms"                                                        },
    { from = "ScalaFunctionalTest",         to = "ScalaFunctionalTestingWithScalaTest"                               },
    { from = "ScalaGlobal",                 to = "GlobalSettings"                                                    },
    { from = "ScalaInterceptors",           to = "ScalaHttpFilters"                                                  },
    { from = "ScalaJsonGenerics",           to = "ScalaJson"                                                         },
    { from = "ScalaJsonInception",          to = "ScalaJsonAutomated"                                                },
    { from = "ScalaJsonRequests",           to = "ScalaJson"                                                         },
    { from = "ScalaTest",                   to = "ScalaTestingYourApplication"                                       },
    { from = "ScalaTodoList",               to = "HelloWorldTutorial"                                                },
    { from = "WSQuickStart",                to = "https://lightbend.github.io/ssl-config/WSQuickStart.html"          },
  ]
}

# Better to have a dead JVM that we can run diagnostics on than no JVM at all
akka.jvm-exit-on-fatal-error = false
play.akka.jvm-exit-on-fatal-error = false
